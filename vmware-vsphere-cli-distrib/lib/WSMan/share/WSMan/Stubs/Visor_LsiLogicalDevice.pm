package Visor_LsiLogicalDevice;
use WSMan::Stubs::Initializable;
use strict;

@Visor_LsiLogicalDevice::ISA = qw(_Initializable);

#===============================================================================
#			INITIALIZER
#===============================================================================

sub _init{
	my ($self, %args) = @_;
	unless(exists $self->{invokableMethods}){
		$self->{invokableMethods} = {};
	}
	unless(exists $self->{id_keys}){
		$self->{id_keys} = ();
	}
	$self->{seqNum} = undef;
	$self->{RLQ} = undef;
	$self->{name} = undef;
	$self->{PRL} = undef;
	$self->{status} = undef;
	$self->{ctrlId} = undef;
	$self->{size} = undef;
	$self->{devId} = undef;
	$self->{SRL} = undef;
	$self->{targetId} = undef;
	$self->{epr_name} = undef;
	push @{$self->{id_keys}}, 'ctrlId';
	push @{$self->{id_keys}}, 'devId';
	@{$self->{id_keys}} = keys %{{ map { $_ => 1 } @{$self->{id_keys}} }};
	if(keys %args){
		$self->_subinit(%args);
	}
}

#===============================================================================


#===============================================================================
#			 seqNum accessor method.
#===============================================================================

sub seqNum{
	my ($self, $newval) = @_;
	$self->{seqNum} = $newval if @_ > 1;
	return $self->{seqNum};
}
#===============================================================================


#===============================================================================
#			 RLQ accessor method.
#===============================================================================

sub RLQ{
	my ($self, $newval) = @_;
	$self->{RLQ} = $newval if @_ > 1;
	return $self->{RLQ};
}
#===============================================================================


#===============================================================================
#			 name accessor method.
#===============================================================================

sub name{
	my ($self, $newval) = @_;
	$self->{name} = $newval if @_ > 1;
	return $self->{name};
}
#===============================================================================


#===============================================================================
#			 PRL accessor method.
#===============================================================================

sub PRL{
	my ($self, $newval) = @_;
	$self->{PRL} = $newval if @_ > 1;
	return $self->{PRL};
}
#===============================================================================


#===============================================================================
#			 status accessor method.
#===============================================================================

sub status{
	my ($self, $newval) = @_;
	$self->{status} = $newval if @_ > 1;
	return $self->{status};
}
#===============================================================================


#===============================================================================
#			 ctrlId accessor method.
#===============================================================================

sub ctrlId{
	my ($self, $newval) = @_;
	$self->{ctrlId} = $newval if @_ > 1;
	return $self->{ctrlId};
}
#===============================================================================


#===============================================================================
#			 size accessor method.
#===============================================================================

sub size{
	my ($self, $newval) = @_;
	$self->{size} = $newval if @_ > 1;
	return $self->{size};
}
#===============================================================================


#===============================================================================
#			 devId accessor method.
#===============================================================================

sub devId{
	my ($self, $newval) = @_;
	$self->{devId} = $newval if @_ > 1;
	return $self->{devId};
}
#===============================================================================


#===============================================================================
#			 SRL accessor method.
#===============================================================================

sub SRL{
	my ($self, $newval) = @_;
	$self->{SRL} = $newval if @_ > 1;
	return $self->{SRL};
}
#===============================================================================


#===============================================================================
#			 targetId accessor method.
#===============================================================================

sub targetId{
	my ($self, $newval) = @_;
	$self->{targetId} = $newval if @_ > 1;
	return $self->{targetId};
}
#===============================================================================


#===============================================================================
#			 epr_name accessor method.
#===============================================================================

sub epr_name{
	my ($self, $newval) = @_;
	$self->{epr_name} = $newval if @_ > 1;
	return $self->{epr_name};
}
#===============================================================================


1;
